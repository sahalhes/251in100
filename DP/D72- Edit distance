#include<bits/stdc++.h>

vector<vector<int> > dp;
int editDistanceHelper(string& str1, string& str2, int i, int j) {
    // if only one string has characters, delete all from other
    if(i < 0) return j + 1;
    if(j < 0) return i + 1;

    if(dp[i][j] != -1) return dp[i][j];
    if(str1[i] == str2[j]) {
        dp[i][j] = editDistanceHelper(str1, str2, i - 1, j - 1);
        return dp[i][j];
    }

    int tryDelete = 1 + editDistanceHelper(str1, str2, i - 1, j);
    int tryRemove = 1 + editDistanceHelper(str1, str2, i - 1, j - 1);
    int tryInsert = 1+ editDistanceHelper(str1, str2, i, j - 1);
    dp[i][j] = min({ tryDelete, tryInsert, tryRemove });
    return dp[i][j];

}
int editDistance(string str1, string str2)
{
        //write you code here
        int n = str1.size();
        int m = str2.size();
        dp = vector<vector<int> >(n, vector<int>(m, -1));
        return editDistanceHelper(str1, str2, n - 1, m - 1);
}