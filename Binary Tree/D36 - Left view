vector<int> getLeftView(TreeNode<int> *root)
{
    //    Write your code here
    vector<int> ans;
    if(root==NULL) return ans;
    queue<TreeNode<int> *> q;
    q.push(root);
    while(1){
        int size = q.size();
        if(size==0) return ans;
        vector<int> data;
        while(size>0){
            TreeNode<int> * temp = q.front();
            q.pop();
            data.push_back(temp->data);
            if(temp->left!=NULL) q.push(temp->left);
            if(temp->right!=NULL) q.push(temp->right);
            size--;
        }
        int left = data[0];
        ans.push_back(left);
    }
    return ans;


}

//memorise that lvl order
//for right int right = data[data.size()-1]