int preIndex=0;

TreeNode<int> *buildTree(vector<int> &inorder, vector<int> &preorder,int is,int ie){

    if(is>ie) return NULL;

    TreeNode<int> *root=new TreeNode(preorder[preIndex]);
    preIndex++;

    int inIndex;
    for(int i=is;i<=ie;i++){
        if(inorder[i]==root->data){
            inIndex=i;
            break;
        }
    }
    root->left= buildTree(inorder,preorder,is,inIndex-1);
    root->right= buildTree(inorder,preorder,inIndex+1,ie);

    return root;

}

TreeNode<int> *buildBinaryTree(vector<int> &inorder, vector<int> &preorder)
{
	//    Write your code here
    TreeNode<int> *ans=buildTree(inorder,preorder,0,inorder.size()-1);
    return ans;
    
}