#include <bits/stdc++.h> 


bool valid(int x,int y,int n,int m)
{
    return x>=0 && y>=0 && x<n && y<m;
}
int findShortestPath(vector<vector<bool>>& mat, 
                        int sourceX, int sourceY,  
                        int destX, int destY,  
                        int n, int m)
{

     queue<pair<int,int>>q;
     q.push({sourceX,sourceY});
     int deli[]={1,-1,0,0};
     int delj[]={0,0,1,-1};
     int steps=1;
     mat[sourceX][sourceY]=0;
     while(!q.empty())
     {
         int sz=q.size();
         while(sz--)
         {
             auto node=q.front();
             q.pop();
             int x=node.first;
             int y=node.second;
             if (x==destX && y==destY) return steps;
             for (int i=0;i<4;i++)
             {
                    int newx=x+deli[i];
                    int newy=y+delj[i];
                    if (valid(newx,newy,n,m) && mat[newx][newy]==1)
                    {
                       mat[newx][newy]=0;
                       q.push({newx,newy}); 
                      
                    }
             }
         }
         
         steps++;
     }
     return -1;
}