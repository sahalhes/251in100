//Brute hash
#include<bits/stdc++.h>
int singleNonDuplicate(vector<int>& arr) {
  int n = arr.size();
  if (n == 1) return arr[0]; // Handle single element
  map<int,int>hash;
  for (int i = 0; i < n; i++) {
    hash[arr[i]]++;
  }
  for(auto pair:hash){
    if(pair.second==1) return pair.first;
  }
  return 0;
}

//BS 

int singleNonDuplicate(vector<int>& arr)
{
	// Write your code here
	int n=arr.size();
	if(n==1) return arr[0];
	if(arr[0]!=arr[1]) return arr[0];
	if(arr[n-1]!=arr[n-2]) return arr[n-1];
	int low=1 , high = n-2;
	while(low<=high){
		int mid = (low+high)/2;
		if(arr[mid-1]!=arr[mid] && arr[mid+1]!=arr[mid] ) {
			return arr[mid];
		}
		if((mid%2==1 && arr[mid]==arr[mid-1] )|| (mid%2==0 && arr[mid]==arr[mid+1])) {
			low=mid+1;
		}
		else{ 
			high=mid-1;
		}
	}
	return -1;
}
