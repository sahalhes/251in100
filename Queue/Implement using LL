class Node{
    public:
        int data;
        Node* next;
        Node(int val){
            data = val;
            next = NULL;
        };
}; 
class Queue {
    Node* head;
    Node* tail;
public:
    Queue() {
        head = NULL;
        tail = NULL;
    } 
    /*----------------- Public Functions of Queue -----------------*/ 
    bool isEmpty() {
        return (head==NULL);
    } 
    void enqueue(int data) {

       Node* n = new Node(data);

       if(head==NULL){

           head = tail = n;

           return;

       }

       tail->next = n;

       tail = tail->next;

    }

 

    int dequeue() {

       if (head == NULL) {

           return -1;

       }

        int ans = head->data;

        if(head->next==NULL){

            delete head;

            head=NULL;

            return ans;

        }
        Node* newhead = head->next;
        delete head;
        head = newhead;
        return ans;
    } 
    int front() {
        if(head==NULL){
            return -1;
        }
        return head->data;
    }
};