#include <bits/stdc++.h> 
bool comp(pair<int,int> a,pair<int,int>b){
    double f = (double) a.second/a.first;
    double g = (double) b.second/b.first;
    return f>g;
}
double maximumValue (vector<pair<int, int>>& items, int n, int w)
{
    // Write your code here.
    // ITEMS contains {weight, value} pairs.
    sort(items.begin(),items.end(),comp);
    int curr=0;
    double Maxi=0.0;
    for(int i=0;i<n;i++){
        if(curr+items[i].first<=w){
            curr+=items[i].first;
            Maxi+=items[i].second;
        }
        else{
            int remain = w -curr;
            Maxi +=(items[i].second/(double)items[i].first)*(double) remain; // this is fractional inclusion
            break;
        }
    }
    return Maxi;
}
