#include <bits/stdc++.h> 
/************************************************************

    Following is the TreeNode class structure

    template <typename T>
    class TreeNode {
       public:
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) {
            this->data = data;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/

class BSTiterator
{   
    void inorder(TreeNode<int> *root , vector<int> &vec){
        if(root==NULL) return;
        inorder(root->left,vec);
        vec.push_back(root->data);
        inorder(root->right,vec);
    }
    int start;
    vector<int> vec;
    public:
    BSTiterator(TreeNode<int> *root)
    {
        // write your code here
        inorder(root , vec);
        start = 0;
    }

    int next()
    {
        // write your code here
        if(start<vec.size()) return vec[start++];
        return -1;
    }

    bool hasNext()
    {
        // write your code here
        if(start<vec.size()) return true;
        return false;
    }
};


/*
    Your BSTIterator object will be instantiated and called as such:
    BSTIterator iterator(root);
    while(iterator.hasNext())
    {
       print(iterator.next());
    }
*/