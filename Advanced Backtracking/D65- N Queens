#include<bits/stdc++.h>

bool safe(int row,int col, vector<vector<int>> &ok,int n){
    for(int i=0;i<n;i++){
        if(ok[row][i]==1 || ok[i][col]==1) return false;
    }
    int i=row, j=col;
    while(i<n&&j<n){
        if(ok[i][j]==1) return false; 
        i++;j++;
    }
    i=row, j=col;
    while(i>=0&&j<n){
        if(ok[i][j]==1) return false; 
        i--;j++;
    }
    i=row, j=col;
    while(i<n&&j>=0){
        if(ok[i][j]==1) return false; 
        i++;j--;
    }
    i=row, j=col;
    while(i>=0&&j>=0){
        if(ok[i][j]==1) return false; 
        i--;j--;
    }
    return true;
}

void solve(vector<vector<int>> &ans,int n,int row,vector<vector<int>> &ok){
    if(row==n){
        vector<int> temp;
        for(auto x:ok){
            for(auto y:x) temp.push_back(y);
        }
        ans.push_back(temp); return;
    }
    for(int i=0;i<n;i++){
        if(safe(row,i,ok,n)){
            ok[row][i]=1;
            solve(ans,n,row+1,ok);
            ok[row][i]=0;
        }
    }
}


vector<vector<int>> solveNQueens(int n) {
    // Write your code here.
    vector<vector<int>> ans;
    vector<vector<int>>ok(n,vector<int>(n,0));
    solve(ans,n,0,ok);
    return ans;
}